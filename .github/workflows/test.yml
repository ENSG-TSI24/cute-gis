name: Back Test

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Check file structure
      run: |
        echo "Current directory:"
        pwd
        echo "Files in directory:"
        ls -R

    - name: Install dependencies
      run: |
        
        sudo apt-get update
        
        sudo apt-get install -y build-essential cmake
        
        sudo apt-get install -y qtcreator qt6-tools-dev qt6-tools-dev-tools qt6-base-dev qt6-base-dev-tools qt6-declarative-dev qt6-multimedia-dev
        
        export PATH=/usr/lib/qt6/bin:$PATH
        echo "export PATH=/usr/lib/qt6/bin:\$PATH" >> ~/.bashrc
        source ~/.bashrc
        
        sudo apt-get install -y libgl1-mesa-dev libglew-dev libglfw3-dev libglu1-mesa-dev libgl-dev libxrandr-dev libxi-dev libxinerama-dev libx11-dev libglm-dev

        sudo apt-get install -y gdal-bin libgdal-dev nlohmann-json3-dev

        # Code's Static analysis with cppcheck
        sudo apt-get install -y cppcheck


        # Unit Testing with Google Test
        sudo apt-get install -y libgtest-dev
        cd /usr/src/gtest
        sudo cmake .
        sudo make
        sudo mv lib/libgtest*.a /usr/lib/

        # generate Automatic Developper Documentation
        sudo apt-get install -y doxygen

    - name: Configure project
      run: |
        mkdir -p build
        cmake -S . -B build -DCMAKE_BUILD_TYPE=Release

    - name: Build project
      run: |
        cmake --build build -- -j$(nproc)

    - name: Static analysis with cppcheck
      run: |
        cppcheck --enable=all . 2> cppcheck_report.txt
        echo "Static analysis completed for all files. Report saved to cppcheck_report.txt."

    - name: Create Doxygen, its configuration and generation
      run: |
        doxygen -g Doxyfile  
        # Update the Doxyfile with the right parameters
        sed -i 's/^PROJECT_NAME           =.*$/PROJECT_NAME           = "cute-gis"/' Doxyfile
        sed -i 's/^OUTPUT_DIRECTORY       =.*$/OUTPUT_DIRECTORY       = .\/docs/' Doxyfile
        sed -i 's/^INPUT                  =.*$/INPUT                  = .\/src/' Doxyfile
        sed -i 's/^RECURSIVE              = NO/RECURSIVE              = YES/' Doxyfile
        sed -i 's/^GENERATE_HTML          = NO/GENERATE_HTML          = YES/' Doxyfile
        sed -i 's/^GENERATE_LATEX         = NO/GENERATE_LATEX         = YES/' Doxyfile
        # Generate Doxygen Documentation that is found in ./docs/html/index.html
        doxygen Doxyfile 

    - name: Run tests
      run: |
        cd build
        ctest --output-on-failure
